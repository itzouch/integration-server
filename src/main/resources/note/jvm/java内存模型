主内存和工作内存：
主内存主要包括：堆和方法区
工作内存包括：线程私有的栈和对主存部分变量拷贝的寄存器。

1.所有的变量都存在主存中，线程共享。
2.每个线程都有自己的工作内存，线程对变量的操作都必须在工作内存中进行，操作前会进行变量拷贝。
3.所以，线程之间的变量传递都需要经过主存来完成。

java的多线程安全无非就是要控制多个线程对资源的有序访问或修改。主要解决的问题就是：可见性和有序性。

当你去new一个对象，这个对象是被分配在主存中的。当线程操作某个对象时，执行顺序：
1. 从主内存复制变量到当前工作内存。
2. 执行代码，改变共享变量值。
3. 用工作内存数据刷新主存相关内容。

但是被volatile修饰的变量，修改是可以直接在主存内修改的。但是不能保证对变量修改的有序性。

但是如果被synchronized修饰，这段代码就成了互斥区，可以保证线程并发的有序性。所以synchronized保证了有序性和可见性。